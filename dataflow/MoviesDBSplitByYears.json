{
	"name": "MoviesDBSplitByYears",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MoviesDB",
						"type": "DatasetReference"
					},
					"name": "MoviesDBdatasource",
					"description": "MoviesDBdatasource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MoviesBefore1960DS",
						"type": "DatasetReference"
					},
					"name": "MoviesBefore1960"
				},
				{
					"dataset": {
						"referenceName": "MoviesBefore1980",
						"type": "DatasetReference"
					},
					"name": "MoviesBefore1980"
				},
				{
					"dataset": {
						"referenceName": "AllOtherMovies",
						"type": "DatasetReference"
					},
					"name": "AllOtherMovies"
				}
			],
			"transformations": [
				{
					"name": "SplitByYear"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movie as string,",
				"          title as string,",
				"          genres as string,",
				"          year as short,",
				"          Rating as short,",
				"          {Rotton Tomato} as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MoviesDBdatasource",
				"MoviesDBdatasource split(year < 1960,",
				"     year < 1980,",
				"     disjoint: false) ~> SplitByYear@(MoviesBefore1960, MoviesBefore1980, AllOtherMovies)",
				"SplitByYear@MoviesBefore1960 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> MoviesBefore1960",
				"SplitByYear@MoviesBefore1980 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> MoviesBefore1980",
				"SplitByYear@AllOtherMovies sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AllOtherMovies"
			]
		}
	}
}